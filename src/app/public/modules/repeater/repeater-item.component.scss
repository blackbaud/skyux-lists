@import "~@skyux/theme/scss/mixins";
@import "~@skyux/theme/scss/_compat/mixins";

.sky-repeater-item {
  display: flex;
  @include sky-border(row);
  padding-top: 0;
  position: relative;

  sky-inline-form {
    display: block;
    width: 100%;

    // Force inline-forms to play nicely with repeater's flex-enabled structure.
    ::ng-deep > :first-child, ::ng-deep .sky-slide-dissolve-first, ::ng-deep .sky-slide-dissolve-last {
      display: flex;
      flex: 1 0 auto;
      width: 100%;
    }

    ::ng-deep .sky-slide-dissolve-last {
      padding-top:10px;
    }
  }

  &.sky-repeater-item-active {
    background-color: $sky-background-color-neutral-light;
    color: $sky-text-color-default;
    padding-left: 6px;
    border-left: $sky-nav-selected-border-width solid $sky-highlight-color-info;

    ::ng-deep .sky-inline-delete {
      margin-left: -$sky-nav-selected-border-width;
      // NOTE: Unfoortunately, scss variables aren't compiled into calc functions. However, the
      // added pixels should match 'sky-nav-selected-border-width'
      width: calc(100% + 4px);
    }
  }
}

.sky-repeater-item-left {
  display: flex;
  padding-top: $sky-padding;
  align-items: center;

  ::ng-deep sky-checkbox {
    display: flex;
  }
}

.sky-repeater-item-right {
  max-width: 100%;
  flex-grow: 1;
}

.sky-repeater-item-header {
  align-items: center;
  display: flex;
  padding-top: $sky-padding;
}

.sky-repeater-item-chevron {
  margin-left: $sky-margin;
}

// Height here is the standard height for checkboxes and the reorder handle. Used for when the
// chevron is hidden to ensure that the right side is the same height as the left.
.sky-repeater-item-chevron-placeholder {
  height: 24px;
}

// Height here is the standard height for context menus. Used to ensure that the right side is
// the same height as the left.
.sky-repeater-item-chevron-placeholder-with-context {
  height: 29px;
}

.sky-repeater-item-context-menu {
  padding: 0 $sky-padding 0 0;
}

.sky-repeater-item-checkbox {
  padding: 0 $sky-padding-half 0 0;
}

.sky-repeater-item-selected {
  background-color: $sky-background-color-selected;
  transition: background-color 150ms;
}

.sky-repeater-item-title {
  margin: 0;
  flex-grow: 1;
  line-height: 1.1;
  color: $sky-text-color-default;
}

::ng-deep sky-repeater-item-content {
  display: block;
  margin: $sky-margin 0 0;
}

.sky-repeater-item-collapsible {
  .sky-repeater-item-header {
    cursor: pointer;
  }

  .sky-repeater-item-content {
    padding-right: $sky-context-menu-size + $sky-padding;
  }
}

.sky-repeater-item-collapsed {
  .sky-repeater-item-content {
    display: none;
  }
}

.sky-repeater-item-reorder-assistive-text {
  @include sky-screen-reader-only();
}

.sky-repeater-item-grab-handle {
  @include sky-icon-button-borderless();
  border: 0;
  width: 24px;
  height: 24px;
  cursor: grab;
  cursor: -webkit-grab;
  cursor: -moz-grab;
  padding: 0;
  margin-right: $sky-margin;
}

:host(.sky-repeater-item-dragging) {

  &.gu-mirror {
    opacity: initial;
    -ms-filter: initial;
    filter: initial;
    background-color: #fff;
    box-shadow: 0px 0px 5px 0 rgba(0, 0, 0, 0.3)
  }

  &.gu-transit .sky-repeater-item {
    background-color: #d8d8d8;

    .sky-repeater-item-left, .sky-repeater-item-right {
      visibility: hidden;
    }
  }

  .sky-repeater-item-grab-handle {
    cursor: grabbing;
    cursor: -moz-grabbing;
    cursor: -webkit-grabbing;
  }
}
